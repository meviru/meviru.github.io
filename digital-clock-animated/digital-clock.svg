<svg viewBox="0 0 250 150" class="clock-container" width="250" height="150" 
  xmlns="http://www.w3.org/2000/svg" 
  xmlns:xlink="http://www.w3.org/1999/xlink">
  <!-- MIT license by Viral Patel https://github.com/meviru/digital-clock-animated -->
  <title>Clock</title>
  <defs>
    <style type="text/css">
      <![CDATA[
        @import url('https://fonts.googleapis.com/css?family=VT323&display=swap');

        @keyframes pulse {
          0% { opacity: 1; }
          50% { opacity: 0.5; }
          100% { opacity: 1; }
        }

        .digital-clock {
          font-family: 'VT323', sans-serif;
          font-size: 5em;
          fill: #00FF00;
        }

        .seconds {
          animation: pulse 1s infinite;
        } 
      ]]>
    </style>
  </defs>
  <text x="50%" y="50%" text-anchor="middle" class="digital-clock">
    <tspan id="hours">00</tspan>:<tspan id="minutes">00</tspan>:<tspan id="seconds" class="seconds">00</tspan>
  </text>
  <script type="text/javascript">
    <![CDATA[
      let [hours, minutes, seconds] = [0, 0, 0];
      
      const updateTime = (element, value) => {
        element.textContent = value.toString().padStart(2, '0');
      };

      const hoursElement = document.getElementById('hours');
      const minutesElement = document.getElementById('minutes');
      const secondsElement = document.getElementById('seconds');

      const updateTimer = () => {
        seconds = (seconds + 1) % 60;
        if (seconds === 0) minutes = (minutes + 1) % 60;
        if (minutes === 0 && seconds === 0) hours = (hours + 1) % 24;

        updateTime(hoursElement, hours);
        updateTime(minutesElement, minutes);
        updateTime(secondsElement, seconds);
      };

      setInterval(updateTimer, 1000);
    ]]>
  </script>
</svg>